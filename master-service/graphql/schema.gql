scalar Upload

type Message {
    _id: ID
    message: String
    author: String
    time: String
    chat: Chat
}

type Chat {
    _id: ID
    name: String
    users: [String]
    messages: [Message]  
}

type Image {
    url: String,
    public_id: String
}

type Comment {
    comment: String
    author: String
    post: Post
    createdAt: String
    updatedAt: String
}


type Post {
    _id: ID
    caption: String
    author: String
    comments: [Comment]
    images: [Image]
    createdAt: String
    updatedAt: String
}

type Query {
    getChatById(id: ID!): Chat
    getAllChats(userId: ID!): [Chat]
    getPosts(id:ID!): [PostWithPagination]
}

type PostWithPagination {
    docs: [Post]
    totalDocs: Int
    limit: Int
    totalPages: Int
    page: Int
    hasPrevPage: Boolean
    hasNextPage: Boolean
}

input CreateChatInput {
    name: String
}

input CreateMessageInput {
    message: String
    author: String
    chat: ID
}

input CreatePostInput {
    caption: String
    author: String
    images: [String]
}

type Mutation {
    createChat(createChatInput: CreateChatInput!): Boolean
    createMessage(createMessageInput: CreateMessageInput!): Boolean
    createPost(createPostInput: CreatePostInput): Post
    updateChat(chatId: ID!, name: String!): Boolean 
    updateMessage(messageId: ID!, message: String!): Boolean
    deleteChat(chatId: ID!): Boolean
    deleteMessage(messageId: ID!): Boolean
}